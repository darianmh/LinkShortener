@using Data.LinkShortener.ViewModel
@model List<Data.LinkShortener.ViewModel.EditCreateTemplateViewModel>
@{
	var selectItemCount = 0;
}
@foreach (var item in Model)
{
	string requiredText = "";
	var check = false;
	<div class="form-group mb-3">
		@if (item.ObjectType == EditCreateTemplateType.Hidden)
		{
			<input class='form-control text-box single-line' data-val='true' id='@item.Name' name='@item.Name' type='hidden' value='@item.Value'>
		}
		else
		{
			<label for='@item.Name'>@item.DisplayName</label>
			<p>@Html.ValidationMessage(item.Name, new { @class = "text text-danger" })</p>
			if (item.IsRequired)
			{
				requiredText = $" data-val-required='{item.DisplayName} مورد نیاز است.' ";
			}
			if (item.ObjectType == EditCreateTemplateType.DbList || item.ObjectType == EditCreateTemplateType.Enum || item.ObjectType == EditCreateTemplateType.DbListMulti || item.ObjectType == EditCreateTemplateType.EnumMulti)
			{
				if (item.ListForOptionList != null)
				{
					selectItemCount++;
					var selectImages = new Dictionary<string, string>();
					var optionCount = 0;
					var multiple = item.ObjectType == EditCreateTemplateType.DbListMulti || item.ObjectType == EditCreateTemplateType.EnumMulti ? "multiple='multiple'" : "";
					<select id='@item.Name' name='@item.Name' @requiredText class="form-control bs-select" data-live-search="true" data-actions-box="true" @multiple>
						@foreach (var option in item.ListForOptionList)
						{
							if (option.Selected)
							{
								<option value="@option.Value" selected="selected">@option.Text</option>
							}
							else
							{
								<option value="@option.Value">@option.Text</option>
							}
							if (option.HasImage)
							{
								var idName = $"bs-select-{selectItemCount}-{optionCount}";
								selectImages.Add(idName, option.ImagePath);
								optionCount++;
							}
						}
					</select>

					if (selectImages.Any())
					{
						@foreach (var image in selectImages)
						{
							<script>
								setTimeout(function () {
									var html = '<img src="@image.Value">';
									$("#@image.Key").parent().append(html);
									$("#@image.Key").parent().addClass('option_backgroundImage');
								}, 6000);

							</script>
						}
					}
				}
				check = true;
			}

			else if (item.ObjectType == EditCreateTemplateType.HtmlEditor)
			{

				<input id='@item.Name' name='@item.Name' type="hidden" />

				var id = $"{item.Name}_1";
				<div id='@id' name='@id' class="richtexteditor" style="width: 960px; margin: 0 auto;">
					@Html.Raw(item.Value)
				</div>

				<script>
					var editor1 = new RichTextEditor(document.getElementById("@id"));
					document.getElementById("@item.Name").value = editor1.getHTMLCode();
					editor1.attachEvent("change", function () {
						document.getElementById("@item.Name").value = editor1.getHTMLCode();
					});
				</script>

				check = true;
			}
			else if (item.ObjectType == EditCreateTemplateType.TextArea)
			{
				<textarea id='@item.Name' name='@item.Name' class="form-control" rows="3">@item.Value</textarea>
				check = true;
			}
			else if (item.ObjectType == EditCreateTemplateType.File || item.ObjectType == EditCreateTemplateType.File)
			{
				@await Html.PartialAsync("_FileUpload", item)
				check = true;
			}
			//for number or decimal only
			var stepsCounter = "";
			if (item.ObjectType == EditCreateTemplateType.Number)
			{
				stepsCounter = "1";
			}
			else if (item.ObjectType == EditCreateTemplateType.Decimal)
			{
				stepsCounter = "0.01";
			}
			else if (item.ObjectType == EditCreateTemplateType.Bool)
			{
				var checkedItem = (bool)item.Value == true ? "checked='checked'" : "";
				<label class="form-switch form-switch-pill form-switch-primary d-block">
					<input type="checkbox" value="true" name="@item.Name" id="@item.Name" @checkedItem>
					<i data-on="بله" data-off="خیر"></i>
				</label>
				check = true;
			}
			if (!check)
			{
				<input class='form-control text-box single-line' data-val='true' @requiredText @stepsCounter id='@item.Name' name='@item.Name' type='@item.TypeName' value='@item.Value'>
			}
		}
	</div>
}